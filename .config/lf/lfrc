set previewer ~/.config/lf/preview.sh
set preview off
#set ratios 1:2:3
set drawbox true
set icons true
set ignorecase true

# For zsh
set shell zsh
set shellopts '-euy'
set ifs "\n"
set filesep "\n"  # default already

map <esc> cmd-escape
map <delete> trash
map <c-z> clear-unselect
map <c-c> copy
map <c-x> cut
map <c-v> paste
map <c-f> search
map <c-a> select-all
map <c-h> set hidden!
map <f-5> reload
map <c-A> invert
map <f-2> rename
map <c-r> rename
map 'h' set hidden!
map <f-16> push :open-with<space>
map <enter> open
map <backspace2> updir
map <c-q> quit
map <c-w> quit

map - $~/.config/lf/draw_img.sh "$f"


cmd trash %trash-put $fx
cmd select-all :unselect; invert
cmd clear-unselect :clear; unselect
cmd mkdir %mkdir "$@"
cmd md %mkdir "$@"
cmd open-with %"$@" $fx

cmd cdf ${{
	dir=$(fdfind . --type d ~ | sk)
	lf -remote "send $id cd \"$dir\""
}}


# Archive bindings
cmd extract ${{
  case "$f" in
      *.zip) unzip "$f" ;;
      *.tar.gz) tar -xzvf "$f" ;;
      *.tar.bz2) tar -xjvf "$f" ;;
      *.tar) tar -xvf "$f" ;;
      *) echo "Unsupported format" ;;
  esac
}}

cmd zip %zip -r "$f" "$f"
cmd tar %tar cvf "$f.tar" "$f"
cmd targz %tar cvzf "$f.tar.gz" "$f"
cmd tarbz2 %tar cjvf "$f.tar.bz2" "$f"

cmd mkfile ${{
  printf "File Name: "
  read ans
  $EDITOR $ans
}}

cmd chmod ${{
  printf "Mode Bits: "
  read ans

  for file in "$fx"
  do
    chmod $ans $file
  done

  lf -remote 'send reload'
}}

cmd query-mime-type %xdg-mime query filetype "$f"

# cmd on-cd &{{
    # # '&' commands run silently in background (which is what we want here),
    # # but are not connected to stdout.
    # # To make sure our escape sequence still reaches stdout we pipe it to /dev/tty
    # printf "\033]0;lf\007" > /dev/tty
# }}

    # printf "\033]0;lf : $PWD\007" > /dev/tty

# # also run at startup
# on-cd
